"use strict";(self.webpackChunkakira_blog=self.webpackChunkakira_blog||[]).push([["769"],{2724:function(e,n,t){t.r(n),t.d(n,{default:()=>s});var a=t(2676),r=t(453);function i(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",pre:"pre",code:"code",img:"img"},(0,r.ah)(),e.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.h1,{id:"前端文件的预览和打印html打印html转pdf",children:["前端文件的预览和打印/HTML打印/HTML转pdf",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#前端文件的预览和打印html打印html转pdf",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"总结了一下前端预览和打印的几个场景"}),"\n",(0,a.jsxs)(n.h2,{id:"1pdf文件流直接预览打印",children:["1、PDF文件流直接预览打印",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1pdf文件流直接预览打印",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"不直接下载文件，而是调用浏览器的打印功能。这里用的是iframe实现的，iframe的src可以直接接收blob转url之后的数据，进行在线的预览。"}),"\n",(0,a.jsx)(n.p,{children:"js"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"//获取文件流\nconst res = await exportOQCCard({ ...values });\n    const disposition = res?.response?.headers.get('Content-Disposition'); //获取请求头\n    if (disposition) {\n      const arr = disposition?.split('filename=') || ['1', 'OQC合格产品标识牌.docx'];\n      if (arr.length === 2) {\n        const filename = decodeURIComponent(arr[1]);\n        const blob = new Blob([res.data], { type: 'application/pdf' });\n        //blob转url地址，这个url可以直接打开（就是下载文件），也可以传给iframe的src\n        const url = window.URL.createObjectURL(blob);\n        const exportPdf = () => {\n          saveAs(res.data, filename);\n          message.success('打印出错，请下载文件手动打印！');\n        };\n        const iframe = document.getElementById('myiframe') as HTMLIFrameElement;\n        try {\n          iframe.src = url;\n          document.body.appendChild(iframe);\n          // 将 iframe 添加到文档中\n          // 写入初始内容到 iframe\n          iframe.onload = () => {\n            setTimeout(() => {\n              if (iframe.contentWindow) {\n                iframe.contentWindow?.print(); // 只打印 iframe 的内容\n              } else {\n                exportPdf();\n              }\n            }, 500); // 确保文档加载完成\n          };\n          return true;\n        } catch (err) {\n          exportPdf();\n        }\n      }\n    }\n"})}),"\n",(0,a.jsx)(n.p,{children:"html iframe展示pdf文件流如果出现乱码的问题，一定是编码有问题，可以加上meta设置编码格式（但是这样后台其实会有个错，说head不能嵌入在iframe中?）"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",children:'    <iframe src={\'\'} width="500" id="myiframe" style={{ display: \'none\' }}>\n       <head>\n         <meta httpEquiv="Content-Type" content="text/html; charset=gbk" />\n       </head>\n     </iframe>\n'})}),"\n",(0,a.jsx)(n.p,{children:"结果：调出浏览器打印页面。chrome浏览器的打印不能调整页面方向（edge可以）这是默认css样式的问题，网上也有解决方案。"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.img,{src:"https://p6-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/cb543c32d13a437b9fed778c95477d9a~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgYWtpcmEwOTEy:q75.awebp?rk3s=f64ab15b&x-expires=1743740394&x-signature=O93D%2BHoxyuU08s8k1NMPlJy2pPo%3D",alt:"image.png"})," 如果需要预览可以把iframe的display放开，或者使用object进行预览"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",children:'       <div className={styles.modal_pdf_container}>\n           <object\n             data={item.fileUrl}\n             className={styles.pdf_iframe}\n             type="application/pdf"\n           >\n              <div>此浏览器不支持预览PDF</div>\n           </object>\n      </div>\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{src:"https://p6-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/e21dfbf1741f45cd927e6fd331b32659~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgYWtpcmEwOTEy:q75.awebp?rk3s=f64ab15b&x-expires=1743740394&x-signature=lgSEQF13zTKb8AWqD9%2FuTIjArow%3D",alt:"1729132210197.png"})}),"\n",(0,a.jsxs)(n.h2,{id:"2html直接打印",children:["2、html直接打印",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2html直接打印",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"用了一个插件react-to-print，可以去官网看一下用法"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",children:'        <Modal\n          title="报告预览"\n          width={screen.width < 1280 ? 1280 : 1600}\n          open={previewModalVisible}\n          onCancel={() => handlePreviewModalVisible(false)}\n          footer={null}\n        >\n          <ReactToPrint\n            trigger={() => <Button type="primary">打印</Button>}\n            content={() => ref.current}\n          />\n\n          <div ref={ref}>\n            <OverviewChart\n              title={getTitle()}\n              repairData={repairData}\n              last12repairData={last12repairData}\n              troubleData={troubleData}\n              refundData={refundData}\n              reportDate={reportDate}\n              customerCode={customerCode}\n              reportType={reportType}\n            />\n          </div>\n        </Modal>\n\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{src:"https://p6-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/cff1e42a11c043d9b939054f813dfb72~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgYWtpcmEwOTEy:q75.awebp?rk3s=f64ab15b&x-expires=1743740394&x-signature=Hoo5QIW%2FIN4iZ0h3L0iPuzcBvHU%3D",alt:"a208a1a6b8e5476f747dfd9552b01a8.png"})}),"\n",(0,a.jsxs)(n.h2,{id:"3html转pdf下载",children:["3、html转pdf下载",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#3html转pdf下载",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"我需要指定一个html元素进行下载，网上这种案例也挺多，很多样式也可以自己调。"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// 页面导出为pdf格式  \nimport html2Canvas from 'html2canvas'  \nimport jsPDF from 'jspdf'  \n  \nconst htmlToPdf = {  \ngetPdf (title, url) {  \n// 指定一个html元素  \nlet target = document.querySelector('#pdfPrint')  \nhtml2Canvas(target, {  \nallowTaint: false,  \ntaintTest: false,  \nlogging: false,  \nuseCORS: true,  \ndpi: window.devicePixelRatio * 4, // 将分辨率提高到特定的DPI 提高四倍  \nscale: 4 // 按比例增加分辨率  \n}).then(canvas => {  \nconst pdf = new jsPDF('p', 'mm', 'a4') // A4纸，纵向  \nconst ctx = canvas.getContext('2d')  \nconst a4w = 190  \nconst a4h = 277 // A4大小，210mm x 297mm，四边各保留10mm的边距，显示区域190x277  \nconst imgHeight = Math.floor(a4h * canvas.width / a4w) // 按A4显示比例换算一页图像的像素高度  \nlet renderedHeight = 0  \n  \nwhile (renderedHeight < canvas.height) {  \nconst page = document.createElement('canvas')  \npage.width = canvas.width  \npage.height = Math.min(imgHeight, canvas.height - renderedHeight)// 可能内容不足一页  \n  \n// 用getImageData剪裁指定区域，并画到前面创建的canvas对象中  \npage.getContext('2d').putImageData(ctx.getImageData(0, renderedHeight, canvas.width, Math.min(imgHeight, canvas.height - renderedHeight)), 0, 0)  \npdf.addImage(page.toDataURL('image/jpeg', 1.0), 'JPEG', 10, 10, a4w, Math.min(a4h, a4w * page.height / page.width)) // 添加图像到页面，保留10mm边距  \n  \nrenderedHeight += imgHeight  \nif (renderedHeight < canvas.height) {  \npdf.addPage()// 如果后面还有内容，添加一个空页  \n}  \n// delete page;  \n}  \n// 保存文件  \npdf.save(title + '.pdf')  \n})  \n}  \n}  \n  \nexport default htmlToPdf\n\n"})})]})}function d(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(i,{...e})}):i(e)}let s=d;d.__RSPRESS_PAGE_META={},d.__RSPRESS_PAGE_META["project-plan%2F%E5%89%8D%E7%AB%AF%E6%96%87%E4%BB%B6%E7%9A%84%E9%A2%84%E8%A7%88%E5%92%8C%E6%89%93%E5%8D%B0-HTML%E6%89%93%E5%8D%B0-HTML%E8%BD%ACpdf.md"]={toc:[{text:"1、PDF文件流直接预览打印",id:"1pdf文件流直接预览打印",depth:2},{text:"2、html直接打印",id:"2html直接打印",depth:2},{text:"3、html转pdf下载",id:"3html转pdf下载",depth:2}],title:"前端文件的预览和打印/HTML打印/HTML转pdf",headingTitle:"前端文件的预览和打印/HTML打印/HTML转pdf",frontmatter:{}}}}]);