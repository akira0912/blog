"use strict";(self.webpackChunkakira_blog=self.webpackChunkakira_blog||[]).push([["602"],{872:function(e,n,a){a.r(n),a.d(n,{default:()=>l});var r=a(2676),s=a(453);function t(e){let n=Object.assign({h1:"h1",a:"a",p:"p",pre:"pre",code:"code",img:"img"},(0,s.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"使用antd的一些小问题",children:["使用antd的一些小问题",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#使用antd的一些小问题",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"好久没写笔记，记录一下最近项目遇到的小知识点，有的是问chatGPT的，挺好用，有时候比自己翻文档快一点。"}),"\n",(0,r.jsxs)(n.h1,{id:"1table为空时的empty组件可以自己修改样式需要用到的api是table的locale",children:["1、table为空时的empty组件可以自己修改样式，需要用到的api是table的locale",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1table为空时的empty组件可以自己修改样式需要用到的api是table的locale",children:"#"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"// table上的\nlocale={{emptyText: <Empty {...emptyProps} className={styles.height} />,}}\n\n// 另外定义的emptyProps \n  const emptyProps = {\n    description: '暂无数据',\n    image: <img src={emptyImg} alt=\"暂无数据\" style={{ display: 'block', margin: '0 auto' }} />,\n    style: { minHeight: '446px' },\n  };\n  \n  // 自定义empty组件的高度 less\n  .height {\n  :global {\n    .ant-empty-image {\n      height: 200px;\n    }\n  }\n}\n"})}),"\n",(0,r.jsxs)(n.h1,{id:"2一个页面上有20个表格对表格的pagesizepagenumbertotal等进行管理",children:["2、一个页面上有20个表格，对表格的pageSize，pageNumber，total等进行管理",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2一个页面上有20个表格对表格的pagesizepagenumbertotal等进行管理",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"定义变量的时候需要确定其长度并且初始化"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ini",children:'const [total, setTotal] = useState<number[]>(Array(20).fill(0));\n  const [page, setPage] = useState<number[]>(Array(20).fill(1));\n  const [limit, setLimit] = useState<number[]>(Array(20).fill(10));\n\n  table组件\n          <Table\n                  loading={loading}\n                  columns={item}\n                  dataSource={data}\n                  rowKey="id"\n                  bordered\n                  size="middle"\n                  pagination={{\n                    showTotal: (t) => `共${t}条`,\n                    current: page[index],\n                    total: total[index],\n                    onShowSizeChange: (_, size) => {\n                      setLimit((pre) => {             //修改其中一个表格的size\n                        const newState = [...pre];\n                        newState[index] = size;\n                        return newState;\n                      });\n                      //setLimit(size);\n                    },\n                    onChange: (pageNumber) => {\n                      setPage((pre) => {\n                        const newState = [...pre];\n                        newState[index] = pageNumber;   //修改其中一个表格的pageNumber\n                        return newState;\n                      });\n                      // setPage(pageNumber);\n                    },\n                  }}\n                />\n'})}),"\n",(0,r.jsxs)(n.h1,{id:"3table第一列是checkbox选中一页的key之后再翻页之前选的key不会丢失",children:["3、table第一列是checkbox，选中一页的key之后再翻页，之前选的key不会丢失",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#3table第一列是checkbox选中一页的key之后再翻页之前选的key不会丢失",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["需要用到",(0,r.jsx)(n.code,{children:"preserveSelectedRowKeys: true,"}),"。这个属性在官方文档上的解释是当数据被删除时仍然保留选项的\xa0",(0,r.jsx)(n.code,{children:"key"}),"，源码里其实有这样的解释",(0,r.jsx)(n.code,{children:"/** Keep the selection keys in list even the key not exist in dataSource anymore */"})," 意思应该就是我们page的值变了->会调一次接口->dataSource的data值会变化，之前选的key已经不在新的dataSource里面了，preserveSelectedRowKeys为true时可以保存住以前选了但是不在现在dataSource的key值"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ini",children:"        <Table\n                loading={loading[0]}\n                columns={columns}\n                dataSource={data}\n                rowKey=\"id\"\n                bordered\n                size=\"middle\"\n                rowSelection={{\n                  columnWidth: '5%',   //这样可以指定第一行checkbox的宽度\n                  type: 'checkbox',\n                  selectedRowKeys: selectedRowKeys1,\n                  onChange: onSelectChange1,\n                  preserveSelectedRowKeys: true,    //翻页不丢失key\n                }}\n              />\n"})}),"\n",(0,r.jsxs)(n.h1,{id:"4一个需求点击开始按钮加载数据的时候显示一个圆形进度条用来展示加载数据的进度",children:["4、一个需求，点击开始按钮，加载数据的时候，显示一个圆形进度条用来展示加载数据的进度。",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#4一个需求点击开始按钮加载数据的时候显示一个圆形进度条用来展示加载数据的进度",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"/./antd-design/7dfcea75b7d24e559e484859394dd59b~tplv-k3u1fbpfcp-zoom-in-crop-mark_1512_0_0_0.webp",alt:"image.png"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.img,{src:"/./antd-design/0057a2d24f4b4d58b842cc4faff5d99d~tplv-k3u1fbpfcp-zoom-in-crop-mark_1512_0_0_0.webp",alt:"image.png"})," （截图只截了一点，所以看起来progress没有居中）"]}),"\n",(0,r.jsx)(n.p,{children:"分析这个需求，感觉应该用一个modal里面加一个progress组件就可以完成的，但是最重要的是修改modal的样式，使modal能够遮罩住整个页面。"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ini",children:'    <Modal\n        closable={false}   //把modal的小叉和确定取消按钮都关掉。\n        footer={null}\n        width="100%"\n        style={{ marginTop: 100 }}\n        visible={transparent}\n        className={styles.transparent}  //在less文件里去修改modal的样式\n      >\n        <Progress\n          type="circle"\n          className={styles.progress}\n          percent={percent}\n          style={{ marginLeft: \'40%\' }}\n          width={200}\n        />\n      </Modal>\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-css",children:"//index.less\n.transparent {\n  :global {\n    .ant-modal-content {\n      background-color: transparent !important;   //把modal的背景设置成透明的，因为modal某人的遮罩是打开的，mask是true，所以背景为透明，就单纯是遮罩的颜色，就能满足需求了\n      box-shadow: none;      //modal边框的阴影样式，去掉 其实就是隐藏modal的存在。\n    }\n  }\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"其实样式看着没多少，但是我调了好久，浪费了很多时间，害。"}),"\n",(0,r.jsxs)(n.h1,{id:"6一个页面有一个table每列都需要跳转render要写很多遍封装一个函数解决",children:["6、一个页面有一个table，每列都需要跳转，render要写很多遍，封装一个函数解决",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#6一个页面有一个table每列都需要跳转render要写很多遍封装一个函数解决",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"/./antd-design/4f332d8cedc24be195f2ca6ca18374cc~tplv-k3u1fbpfcp-zoom-in-crop-mark_1512_0_0_0.webp",alt:"image.png"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"/./antd-design/c3b7d99502634199b4f13cda1fc74409~tplv-k3u1fbpfcp-zoom-in-crop-mark_1512_0_0_0.webp",alt:"image.png"})}),"\n",(0,r.jsxs)(n.h1,{id:"8浏览器空格",children:["8、浏览器空格",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#8浏览器空格",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["浏览器会将文字前后的空格省略，文字中连续的空格会合并成一个空格。 导致的问题：直接复制做查询条件时查询不到表格数据。 解决1:重新render渲染一遍，将其包裹在",(0,r.jsx)(n.code,{children:"<pre>"}),"标签中，该标签会保持字符串原样输出，不会对空格进行修正，但是自带的样式也会消失，且不能换行。 解决2:style中设置whiteSPace的值为pre-wrap，可以正常换行且保留样式。"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-css",children:" <div\n     style={{ wordWrap: 'break-word', wordBreak: 'break-word', whiteSpace: 'pre-wrap' }}\n  >{`${typeCode}`}</div>\n"})}),"\n",(0,r.jsx)(n.p,{children:"以上都是自己的摸索，不知道有没有更好的解决办法，"}),"\n",(0,r.jsxs)(n.h1,{id:"9最后还有一个待解决的问题",children:["9、最后还有一个待解决的问题。",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#9最后还有一个待解决的问题",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"两个列表并列，一个五条数据一个十条数据，看着页面不好看，不知道该怎么调整比较好呢？"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"/./antd-design/520d775bac9a4d6d918ba817e215bede~tplv-k3u1fbpfcp-zoom-in-crop-mark_1512_0_0_0.webp",alt:"image.png"})})]})}function d(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(t,{...e})}):t(e)}let l=d;d.__RSPRESS_PAGE_META={},d.__RSPRESS_PAGE_META["antd-design%2F%E4%BD%BF%E7%94%A8antd%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E9%97%AE%E9%A2%98.md"]={toc:[],title:"9、最后还有一个待解决的问题。",headingTitle:"9、最后还有一个待解决的问题。",frontmatter:{}}}}]);